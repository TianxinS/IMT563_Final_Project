
-- Create dbo.Users
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Users')
BEGIN
CREATE TABLE dbo.Users
(
UserID INT IDENTITY(1,1) CONSTRAINT PK_Users PRIMARY KEY NOT NULL,
UserName VARCHAR(20) NOT NULL,
FirstName VARCHAR(20) NOT NULL,
LastName VARCHAR(20) NOT NULL,
DateOfBirth DATE,
EmailAddress VARCHAR(100) NOT NULL,
PhoneNumber VARCHAR(20),
Password BINARY(64) NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);
END
GO

-- Create dbo.Movies
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Movies')
BEGIN
CREATE TABLE dbo.Movies
(
MovieID INT NOT NULL,
LanguageID INT NOT NULL,
MovieTitle VARCHAR(100) NOT NULL,
MovieDesc VARCHAR(1000),
IMDBRating Decimal(2,1),
RTRating Decimal(2,1),
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100),
Tagline VARCHAR(150),
ReleaseDate DATETIME,
WebLink VARCHAR(150),
Revenue FLOAT
);


ALTER TABLE dbo.Movies
ADD CONSTRAINT PK_Movies PRIMARY KEY (MovieID);
ALTER TABLE dbo.Movies
ADD CONSTRAINT FK_Movies_Language FOREIGN KEY (LanguageID) dbo.Languages(LanguangeID);
END
GO


--Create dbo.MovieReviews
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'MovieReviews')
BEGIN
CREATE TABLE dbo.MovieReviews
(
MovieReviewID INT IDENTITY(1,1) CONSTRAINT PK_UserPreferences PRIMARY KEY NOT NULL,
MovieID INT NOT NULL,
MovieReviewDesc VARCHAR(MAX) NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100),
Author VARCHAR(30)
);
ALTER TABLE dbo.MovieReviews
ADD CONSTRAINT FK_MovieReviews_Movies FOREIGN KEY(MovieID) REFERENCES dbo.Movies(MovieID);
END
GO

-- Create dbo.Genres
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Genres')
BEGIN
CREATE TABLE dbo.Genres
(
GenreID INT NOT NULL,
GenreName VARCHAR(15) NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);

ALTER TABLE dbo.Genres
ADD CONSTRAINT PK_Genres PRIMARY KEY (GenreID);
END
GO

-- Create dbo.Movie_Genre
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Movie_Genre')
BEGIN
CREATE TABLE dbo.Movie_Genre
(
MovieID INT NOT NULL,
GenreID INT NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);

ALTER TABLE dbo.Movie_Genre
ADD CONSTRAINT PK_Movie_Genre PRIMARY KEY (MovieID, GenreID);
ALTER TABLE dbo.Movie_Genre
ADD CONSTRAINT FK_Movie_Genre_Genres FOREIGN KEY(GenreID) REFERENCES dbo.Genres(GenreID);
ALTER TABLE dbo.Movie_Genre
ADD CONSTRAINT FK_Movie_Genre_Movies FOREIGN KEY(MovieID) REFERENCES dbo.Movies(MovieID);
END
GO


-- Create dbo.UserPreferences
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'UserPreferences')
BEGIN
CREATE TABLE dbo.UserPreferences
(
UserPreferenceID INT IDENTITY(1,1) CONSTRAINT PK_UserPreferences PRIMARY KEY NOT NULL,
UserID INT NOT NULL,
LanguageID INT NOT NULL,
GenreID INT NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);
END
GO

-- Create dbo.Languages
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Languages')
BEGIN
CREATE TABLE dbo.Languages
(
LanguageID INT IDENTITY(1,1) CONSTRAINT PK_Languages PRIMARY KEY NOT NULL,
LanguageABBR VARCHAR(2) NOT NULL,
LanguageName VARCHAR(20) NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);
END
GO

--Create dbo.StreamingPlatforms
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'StreamingPlatforms')
BEGIN
CREATE TABLE dbo.StreamingPlatforms
(
SPID INT IDENTITY(1,1) CONSTRAINT PK_StreamingPlatforms PRIMARY KEY NOT NULL,
SPName VARCHAR(20) NOT NULL
);
END
GO

--Create dbo.Movie_StreamingPlatforms
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Movie_StreamingPlatforms')
BEGIN
CREATE TABLE dbo.Movie_StreamingPlatforms
(
MSPID INT IDENTITY(1,1) CONSTRAINT PK_Movie_StreamingPlatforms PRIMARY KEY NOT NULL,
SPID INT NOT NULL,
MovieID INT NOT NULL
);
END
GO

-- Create dbo.Similar_Movie
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'Similar_Movie')
BEGIN
CREATE TABLE dbo.Similar_Movie
(
MovieID INT NOT NULL,
SimilarMovieID INT NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);

ALTER TABLE dbo.Similar_Movie
ADD CONSTRAINT FK_Similar_Movie_MovieID FOREIGN KEY(MovieID) REFERENCES dbo.Movies(MovieID);
ALTER TABLE dbo.Similar_Movie
ADD CONSTRAINT FK_Similar_Movie_SimilarMovieID FOREIGN KEY(SimilarMovieID) REFERENCES dbo.Movies(MovieID);
END
GO


-- Create dbo.UserWatchHistory
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'UserWatchHistory')
BEGIN
CREATE TABLE dbo.UserWatchHistory
(
HistoryID INT IDENTITY(1,1) CONSTRAINT PK_UserWatchHistory PRIMARY KEY NOT NULL,
UserID INT CONSTRAINT FK_UserWatchHistory_UserID FOREIGN KEY(UserID) REFERENCES dbo.Users(UserID) NOT NULL,
MovieID INT CONSTRAINT FK_UserWatchHistory_MovieID FOREIGN KEY(MovieID) REFERENCES dbo.Movies(MovieID) NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100)
);

END
GO

-- Create dbo.UserWatchList
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'UserWatchList')
BEGIN
CREATE TABLE dbo.UserWatchList
(
UWLID INT IDENTITY(1,1) CONSTRAINT PK_UserWatchList PRIMARY KEY NOT NULL,
UserID INT CONSTRAINT FK_UserWatchList_UserID FOREIGN KEY(UserID) REFERENCES dbo.Users(UserID) NOT NULL,
MovieID INT CONSTRAINT FK_UserWatchList_MovieID FOREIGN KEY(MovieID) REFERENCES dbo.Movies(MovieID) NOT NULL,
WatchlistName VARCHAR(100),
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);

END
GO


-- Create dbo.UserPreferenceLanguage
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'UserPreferenceLanguage')
BEGIN
CREATE TABLE dbo.UserPreferenceLanguage
(
UserID INT CONSTRAINT FK_UserPreferenceLanguage_UserID FOREIGN KEY(UserID) REFERENCES dbo.Users(UserID) NOT NULL,
LanguageID INT CONSTRAINT FK_UserPreferenceLanguage_LanguageID FOREIGN KEY(LanguageID) REFERENCES dbo.Languages(LanguageID) NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);

ALTER TABLE dbo.UserPreferenceLanguage
ADD CONSTRAINT PK_UserPreferenceLanguage PRIMARY KEY(UserID, LanguageID);

END
GO


-- Create dbo.UserPreferenceGenre
IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = 'dbo' AND TABLE_NAME = 'UserPreferenceGenre')
BEGIN
CREATE TABLE dbo.UserPreferenceGenre
(
UserID INT CONSTRAINT FK_UserPreferenceGenre_UserID FOREIGN KEY(UserID) REFERENCES dbo.Users(UserID) NOT NULL,
GenreID INT CONSTRAINT FK_UserPreferenceGenre_GenreID FOREIGN KEY(GenreID) REFERENCES dbo.Genres(GenreID) NOT NULL,
CreatedDate DATETIME,
CreatedBy VARCHAR(100),
ModifiedDate DATETIME,
ModifiedBy VARCHAR(100)
);

ALTER TABLE dbo.UserPreferenceGenre
ADD CONSTRAINT PK_UserPreferenceGenre PRIMARY KEY(UserID, GenreID);

END
GO